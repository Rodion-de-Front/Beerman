version: "3.9"

name: biermann_shop
services:
  redis:
    image: redislabs/redismod
    ports:
      - "6749:6379"
    volumes:
      - $PWD/data:/data
  db:
    image: postgres:14
    restart: always
    env_file:
      - .env
    volumes:
      - biermann_pg_data:/var/lib/postgresql/data
    ports:
      - "5676:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    # volumes:
    #   - "logs:/data"
    ports:
      - "3231:3333"
    depends_on:
      - db
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.beerman-back.loadbalancer.server.port=3333"
      - "traefik.http.routers.beerman-back.tls.certresolver=le"
      - "traefik.http.routers.beerman-back.rule=Host(`biermann-api.onixx.ru`)"
      - "traefik.http.routers.beerman-back.entrypoints=websecure"
      - "traefik.http.routers.beerman-back.tls=true"
  biermann-ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.beerman.loadbalancer.server.port=80"
      - "traefik.http.routers.beerman.tls.certresolver=le"
      - "traefik.http.routers.beerman.rule=Host(`biermann.onixx.ru`)"
      - "traefik.http.routers.beerman.entrypoints=websecure"
      - "traefik.http.routers.beerman.tls=true"

volumes:
  biermann_pg_data:
